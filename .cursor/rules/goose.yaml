# goose.yaml - PsyClinicAI / BizzPolar tam otomatik ajan sistemi iÃ§in geliÅŸtirilmiÅŸ config
# Sprint satÄ±rÄ±ndan Flutter widget, Firestore schema ve internal prompt Ã¼reten pipeline.
# Model seÃ§imi ve retry/fallback logic bridge script iÃ§inde halledilir; burada sadece o script Ã§aÄŸrÄ±lÄ±r.

providers:
  - name: ollama
    type: http
    endpoint: http://localhost:11434/api/generate  # VarsayÄ±lan Ollama HTTP API; model ismi payload iÃ§inde geÃ§ilecek (Ã¶rn. llama3:latest, mistral:latest, deepseek-coder:latest).

tasks:
  - name: sprint_processor
    description: >
      Sprint satÄ±rÄ±nÄ± alÄ±r, uygun modeli seÃ§er (UI/widget iÅŸleri iÃ§in deepseek-coder:latest, Firestore/schema iÃ§in mistral:latest, diÄŸer durumlar iÃ§in llama3:latest),
      ve aÅŸaÄŸÄ±daki Ã¼Ã§ bÃ¶lÃ¼mÃ¼ Ã¼retir: Flutter widget, Firestore JSON schema ve dahili prompt. Bridge script iÃ§inde retry, fallback ve JSON doÄŸrulama yapÄ±lÄ±r.
    input_vars:
      - sprint_line
    run:
      command: >
        python scripts/goose_sprint_bridge.py --sprint-line "{{sprint_line}}"

# Notlar / GeliÅŸtirme Ä°puÃ§larÄ±:
# 1. EÄŸer Goose sÃ¼rÃ¼mÃ¼n prompt ÅŸablonlamayÄ± destekliyorsa, aÅŸaÄŸÄ±daki iskeleti doÄŸrudan script'e geÃ§irmek yerine
#    burada bir `prompt_template` olarak tanÄ±mlayÄ±p script'i sadece parse eden/Ã§Ä±ktÄ±yÄ± iÅŸleyen yalÄ±n bir kÃ¶prÃ¼ yapabilirsin.
# 2. bridge script (scripts/goose_sprint_bridge.py) iÃ§inde ÅŸu mantÄ±k olmalÄ±:
#    * sprint_line iÃ§eriÄŸine gÃ¶re model seÃ§imi (keyword bazlÄ±: flutter/widget/ui -> deepseek-coder:latest, firestore/schema -> mistral:latest, else llama3:latest)
#    * Prompt oluÅŸturma: Ã¼Ã§ bÃ¶lÃ¼m (### Flutter Widget ###, ### Firestore Schema ###, ### Prompt ğŸ“‹ ###) ayrÄ±lmÄ±ÅŸ ÅŸekilde.
#    * Ollama API Ã§aÄŸrÄ±sÄ±: model alanÄ± ile isteÄŸi gÃ¶nder, eÄŸer "model not found" hatasÄ± alÄ±rsan fallback olarak model parametresini kaldÄ±r veya baÅŸka model dene.
#    * Ã‡Ä±ktÄ±yÄ± stdout'a yaz ve aynÄ± zamanda bir raw log dosyasÄ±na dÃ¼ÅŸ (Ã¶rneÄŸin outputs/{safe_name}_raw.txt).
# 3. Dosya adlarÄ±nda kullanÄ±lan sprint_line Ã§ok uzun oluyorsa `make_safe_filename` benzeri fonksiyonla kÄ±rpÄ±lmÄ±ÅŸ, illegal karakterlerden arÄ±ndÄ±rÄ±lmÄ±ÅŸ hali kullan.
# 4. Ä°leride inline fallback istersen (script bozulduÄŸunda), ikinci bir task ekleyebilirsin:
#    - name: sprint_processor_direct
#      description: Fallback olarak script kullanmadan doÄŸrudan bu prompt ÅŸablonunu provider'a gÃ¶nderir.
#      input_vars:
#        - sprint_line
#      run:
#        prompt_template: |
#          You are an AI development assistant. Given the sprint line: "{{sprint_line}}", do the following:
#          1. ... (aynÄ± Ã¼Ã§ bÃ¶lÃ¼m talimatÄ± burada yer alÄ±r) 