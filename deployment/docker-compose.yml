version: '3.8'

services:
  # Static Web (Flutter build/web) via Caddy (auto HTTPS)
  psyclinicai-web:
    image: caddy:alpine
    container_name: psyclinicai-web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../build/web:/usr/share/caddy:ro
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    networks:
      - psyclinicai-network
  # Main PsyClinicAI Application
  psyclinicai-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: psyclinicai-app
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://psyclinicai:password@postgres:5432/psyclinicai
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - ENCRYPTION_KEY=your-32-character-encryption-key
      - ENCRYPTION_IV=your-16-character-iv
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - psyclinicai-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: psyclinicai-postgres
    environment:
      - POSTGRES_DB=psyclinicai
      - POSTGRES_USER=psyclinicai
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - psyclinicai-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: psyclinicai-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - psyclinicai-network

  # (Opsiyonel) Backend ve ters vekil yapı burada tanımlı. Web için gerekmeden çalışır.

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: psyclinicai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - psyclinicai-network

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: psyclinicai-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - psyclinicai-network

  # Log Aggregation - ELK Stack
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: psyclinicai-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped
    networks:
      - psyclinicai-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: psyclinicai-logstash
    volumes:
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline
      - ./logs:/var/log/psyclinicai
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - psyclinicai-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: psyclinicai-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - psyclinicai-network

  # Backup Service
  backup:
    image: postgres:15-alpine
    container_name: psyclinicai-backup
    environment:
      - POSTGRES_DB=psyclinicai
      - POSTGRES_USER=psyclinicai
      - POSTGRES_PASSWORD=password
    volumes:
      - ./backup:/backup
      - ./scripts/backup.sh:/backup.sh
    depends_on:
      - postgres
    command: sh -c "chmod +x /backup.sh && /backup.sh"
    restart: "no"
    networks:
      - psyclinicai-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  psyclinicai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
